#include<stdio.h>
#include<stdlib.h>
#include<assert.h>
#include<string.h> 
int main()
{
	int arr[]={9,3,8,7,6,4,1};
	void Mergesort(int *arr,int len,int gap); 
	int len=sizeof(arr)/sizeof(int);
	int gap=1;
	Mergesort(arr,len,gap);
	for(int i=0;i<len;i++)
	printf("%d   ",arr[i]);
	return 0;
}
void Mergesort(int *arr,int len,int gap)
{
	int *brr=(int*)malloc(sizeof(int)*len);
	assert(brr!=NULL);
	int start1=0;
	int end1=start1+gap-1;
	int start2=end1+1;
	int end2=start2+gap-1<len?  start2+gap-1 : len-1;
	int j=0;
	while(start2<len)
	{
		while(start1<=end1&&start2<=end2)//用<=而不是！=是为了避免start1=end1时跳出循环 
		brr[j++]= arr[start1]<arr[start2] ? arr[start1++]: arr[start2++];	
		while(start1<=end1)
		brr[j++]=arr[start1++];
		while(start2<=end2)
		brr[j++]=arr[start2++];
		start1=end2+1;
	 	end1=start1+gap-1;
	 	start2=end1+1;
		end2=start2+gap-1<len?  start2+gap-1 : len-1;
	}
	while(start1<len)
	brr[j++]=arr[start1++];
	memcpy(arr,brr,sizeof(int)*len);
	if(gap<len)
	{
	gap*=2;
	Mergesort(arr,len,gap);
	}		
}