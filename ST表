#include<iostream>
#include<vector>
#include<cmath>
#include<algorithm>
using namespace std;
int main(){
    vector<int> arr = {5,67,78,0,9,18,34,5345,8,2,54,7,8,8,99,23,353,53,646,6};
        int n = arr.size();
        int t = log(n) / log(2) + 1;
        vector<vector<int>> dp(n, vector<int> (t));//dp[i][j]表示 区间【i ~ 2^j - 1】的最值
        for(int i = 0; i < n; i++) dp[i][0] = arr[i];
        for(int j = 1; j < t; j++){
            for(int i = 0; i + (1 << (j - 1)) < n; i++){
                dp[i][j] = max(dp[i][j - 1], dp[i + (1 << (j - 1))][j - 1]);
            }
        }
        auto query = [&](int l, int r){
            int k = log(r - l + 1) / log(2);
            return max(dp[l][k], dp[r - (1 << k) + 1][k]);
        };
       cout << query(16, 17);
}