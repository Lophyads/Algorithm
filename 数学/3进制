struct Vector{ // 3进制运算
	typedef unsigned long long ull;
	ull x, y;
    Vector(ull x = 0, ull y = 0) : x(x), y(y) {
    }
    Vector operator + (const Vector& v) const {
        Vector res;
        for (int i = 0; i < 3; i += 1)
            for (int j = 0; j < 3; j += 1) {
                int k = (i + j) % 3;
                if (k & 1)
                    res.x |= (i & 1 ? x : ~x) & (i & 2 ? y : ~y)
                           & (j & 1 ? v.x : ~v.x) & (j & 2 ? v.y : ~v.y);
                if (k & 2)
                    res.y |= (i & 1 ? x : ~x) & (i & 2 ? y : ~y)
                           & (j & 1 ? v.x : ~v.x) & (j & 2 ? v.y : ~v.y);
            }
        return res;
    }
    Vector operator - () const {
        return {y, x};
    }
    operator bool() const {
        return x or y;
    }
    void print() {
        for (int i = 0; i < 64; i += 1) {
            cout << ((x >> i) & 1) + ((y >> i) & 1) * 2;
        }
        cout << "\n";
    }
};